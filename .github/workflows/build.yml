name: Android CI Build
on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git \
            unzip \
            wget \
            openjdk-17-jdk \
            python3-pip \
            autoconf \
            automake \
            libtool \
            pkg-config \
            zlib1g-dev \
            libncurses5-dev \
            libbz2-dev \
            libffi-dev \
            liblzma-dev \
            libsqlite3-dev \
            libssl-dev

      - name: Install Buildozer and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install buildozer cython==0.29.33 virtualenv

      - name: Create Buildozer directories
        run: |
          mkdir -p ~/.buildozer/android/platform

      - name: Install Android SDK
        run: |
          mkdir -p ~/.android
          touch ~/.android/repositories.cfg
          
          # Download and extract command line tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -q commandlinetools-linux-*.zip -d ~/.android/
          mv ~/.android/cmdline-tools ~/.android/cmdline-tools-temp
          mkdir -p ~/.android/cmdline-tools/latest
          mv ~/.android/cmdline-tools-temp/* ~/.android/cmdline-tools/latest/
          rm -r ~/.android/cmdline-tools-temp
          
          # Accept licenses
          yes | ~/.android/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null
          
          # Install required components (with retry logic)
          ~/.android/cmdline-tools/latest/bin/sdkmanager --install \
            "platform-tools" \
            "build-tools;33.0.2" \
            "platforms;android-33" \
            || ~/.android/cmdline-tools/latest/bin/sdkmanager --install \
            "platform-tools" \
            "build-tools;33.0.2" \
            "platforms;android-33"

          # Verify build-tools installation
          ls -la ~/.android/build-tools/33.0.2/

      - name: Install Android NDK
        run: |
          wget -q https://dl.google.com/android/repository/android-ndk-r25b-linux.zip
          mkdir -p ~/.buildozer/android/platform
          unzip -q android-ndk-r25b-linux.zip -d ~/.buildozer/android/platform/
          ls -la ~/.buildozer/android/platform/android-ndk-r25b

      - name: Configure Buildozer environment
        run: |
          # Create direct copies instead of symlinks for better reliability
          mkdir -p ~/.buildozer/android/platform/android-sdk
          cp -r ~/.android/cmdline-tools/latest ~/.buildozer/android/platform/android-sdk/tools
          cp -r ~/.android/platform-tools ~/.buildozer/android/platform/android-sdk/platform-tools
          cp -r ~/.android/build-tools/33.0.2 ~/.buildozer/android/platform/android-sdk/build-tools
          cp -r ~/.android/platforms ~/.buildozer/android/platform/android-sdk/platforms
          
          # Verify tools are accessible
          ~/.buildozer/android/platform/android-sdk/build-tools/33.0.2/aidl --version
          ~/.buildozer/android/platform/android-ndk-r25b/ndk-build --version

      - name: Set environment variables
        run: |
          echo "ANDROID_HOME=~/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=~/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=~/.buildozer/android/platform/android-ndk-r25b" >> $GITHUB_ENV
          echo "PATH=${PATH}:~/.buildozer/android/platform/android-sdk/platform-tools:~/.buildozer/android/platform/android-sdk/build-tools/33.0.2" >> $GITHUB_ENV

      - name: Build APK
        run: |
          # Clean previous builds
          rm -rf .buildozer/android/platform/build-*
          
          # Run build with debug output
          buildozer -v android debug
        env:
          P4A_RELEASE_KEYSTORE: ${{ secrets.P4A_RELEASE_KEYSTORE }}
          P4A_RELEASE_KEYSTORE_PASSWD: ${{ secrets.P4A_RELEASE_KEYSTORE_PASSWD }}
          P4A_RELEASE_KEYALIAS_PASSWD: ${{ secrets.P4A_RELEASE_KEYALIAS_PASSWD }}
          P4A_RELEASE_KEYALIAS: ${{ secrets.P4A_RELEASE_KEYALIAS }}

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: kisaan-app-apk
          path: bin/*.apk
